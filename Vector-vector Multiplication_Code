#include<stdio.h>
#include<cuda.h>

__global__ void arrmul(int *x,int *y, int *z)    
{
  int id=blockIdx.x; 
  z[id]=x[id]*y[id];
}

int main()
{
    int a[6];
    int b[6];
    int c[6];
    int *d,*e,*f;
    int i;
    
    for(i=0;i<6;i++)
    {
        a[i]=i;
    }

    for(i=0;i<6;i++)
    {
        b[i]=i;
    }

    cudaMalloc((void **)&d,6*sizeof(int));
    cudaMalloc((void **)&e,6*sizeof(int));
    cudaMalloc((void **)&f,6*sizeof(int));

 cudaMemcpy(d,a,6*sizeof(int),cudaMemcpyHostToDevice);   
 cudaMemcpy(e,b,6*sizeof(int),cudaMemcpyHostToDevice);
 
arrmul<<<6,1>>>(d,e,f); 

 cudaMemcpy(c,f,6*sizeof(int),cudaMemcpyDeviceToHost);
    
printf("\nMultiplication of two vector:\n ");
    for(i=0;i<6;i++)
    {
        printf("%d\t",c[i]);
    }

    cudaFree(d);
    cudaFree(e);
    cudaFree(f);

    return 0;
}
